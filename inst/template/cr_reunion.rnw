
<<setup, include=FALSE>>=
knitr::opts_chunk$set(results='asis', echo=FALSE)

# chargement du package bastiR
require(bastiR)

# chargement des variables du projet
source("cr_config.r")
@

% Préambule LaTeX ==============================================================
\documentclass[\Sexpr{fontsize}, \Sexpr{classoption}]{\Sexpr{documentclass}}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[french]{babel}
\usepackage[\Sexpr{geometry}]{geometry}
\usepackage{lmodern}
\usepackage{hyperref}
\usepackage[]{graphicx}
\usepackage[letterspace=\Sexpr{letterspace}]{microtype} % pour espacement de caractères avec \lsstyle
\usepackage{ulem} % pour barrer \sout
\usepackage{setspace} % pour définir les interlignes
\renewcommand*{\familydefault}{\\Sexpr{familydefault}} % police par défaut
\usepackage{tabularx}
\usepackage[table,usenames,dvipsnames]{xcolor}
\usepackage{array}
\usepackage{longtable}
\setlongtables % pour pouvoir utiliser les colonnes l r c en longtable
\setlength{\LTleft}{-20cm plus -1fill} % pour l'alignement horizontal des lontables
\setlength{\LTright}{\LTleft}
\usepackage{fancyhdr} % entete et pied de page
\pagestyle{fancy}
\DeclareUnicodeCharacter{00A0}{~} % pour espaces insécables en utf8
\parindent \Sexpr{parindent}
% \graphicspath{{\Sexpr{graphicspath}}}

<<colors>>=
for (i in seq_along(RGBcolors)) {
  cat("\\definecolor{", names(RGBcolors)[i], "}{RGB}{", paste(RGBcolors[[i]], collapse=","), "}\n", sep="")
}
@

% entête et pied de page -------------------------------------------------------
\fancyhf{}
\fancyhead[C]{\Sexpr{entete$C}}
\fancyhead[L]{\Sexpr{entete$L}}
\fancyhead[R]{\Sexpr{entete$R}}
\fancyfoot[C]{\Sexpr{pied$C}}
\fancyfoot[L]{\Sexpr{pied$L}}
\fancyfoot[R]{\Sexpr{pied$R}}
\renewcommand{\headrulewidth}{0pt} % pour ne pas afficher de ligne horizontale en entête

% Début document LaTeX =========================================================
\begin{document}

% Page de garde ----------------------------------------------------------------
<<garde>>=
print_garde(garde)
@

% Lecture fichier Excel --------------------------------------------------------
<<read, include=FALSE>>=
# lecture fichier
xl = read_xl(xlfile,
             col_dates = col_dates, 
             origin = origin)
@

% Retaillage des photos --------------------------------------------------------
<<resize_photos, include=FALSE>>=
if (!dir.exists(backup))
  dir.create(backup)

resize_photos(photo_files = photo_files,
              folder = backup, max_width = max_width, max_height = max_height)

photo_files = list.files(backup, pattern = ".*\\.(jpg|jpeg|JPG|JPEG|png|PNG)")
@

% Prépare feuille de calcul PHOTOS ---------------------------------------------
<<prepare_photo, include=FALSE>>=
if (!("PHOTOS" %in% names(xl))) {
  # prepare tableau photo
  xl$PHOTOS = prepare_photos(photo_files)
  write_xl(xl, xlfile_out, open = openxl)
}
@

% Légende ----------------------------------------------------------------------
<<legende, include=FALSE>>=
require(dplyr)

legende = xl$LEGENDE %>% 
  mutate_each(funs(tolower), CLE, CLASSE) %>% 
  filter(!is.na(CLE))

cles = legende$CLE
if (anyDuplicated(cles))
  stop("clés dupliquées dans la légende:", cles[duplicated(cles)], "\n")
@

% Affichage tableau page de garde ----------------------------------------------
\begin{spacing}{.7}
{\fontsize{6pt}{1em}\selectfont
\setlength{\tabcolsep}{1pt}
\renewcommand{\arraystretch}{1}
<<tab_orga>>=
orga = legende %>% 
  filter(CLASSE == "acteur orga", CLE != "all") %>% 
  select(DESIGNATION, NOM, REPRESENTANT, TEL, MOBILE, FAX, EMAIL, P, DIF, INV, C)

print_table(orga, 
            header = header$orga,
            col_format = col_format$orga, 
            rowcol_head = rowcol_head,
            hline = hline,
            grid_col = grid_col,
            vspace_after = "-.68cm")
@

<<tab_exe>>=
exe = legende %>% 
  filter(CLASSE == "acteur exe") %>% 
  select(LOT, DESIGNATION, NOM, REPRESENTANT, TEL, MOBILE, FAX, EMAIL, P, DIF, INV, C)

print_table(exe, 
            header = header$exe,
            col_format = col_format$exe, 
            rowcol_head = rowcol_head,
            hline = hline,
            grid_col = grid_col)
@
}
\end{spacing}

% Mise en forme des taches -----------------------------------------------------
<<edit_taches, include=FALSE>>=
cejour = xl$CEJOUR %>% 
  filter(!is.na(SECTION)) %>%  # effacer lignes vides
  mutate(ETAT = ifelse(is.na(ETAT), "a", ETAT)) # ETAT vide -> A faire

# ajouter cejour à taches
taches = xl$TACHES %>% 
  bind_rows(cejour)

# recodage et tri
taches = taches %>% 
  mutate(ETAT = tolower(ETAT)) %>%
  mutate(SECTION = tolower(SECTION)) %>% 
  mutate(ACTEUR = tolower(ACTEUR)) %>% 
  arrange(ETAT, SECTION, ECHEANCE, ACTEUR) # trier les lignes par ETAT, SECTION, ECHEANCE puis ACTEUR

# ajouter rappel
row = (taches$ETAT == "a") & (taches$ECHEANCE <= date_reu)
taches$PRIORITE[row] = "RAPPEL"

# ajouter urgent
row = (taches$ETAT == "a") & (taches$ECHEANCE <= date_reu-7)
taches$PRIORITE[row] = "URGENT"

# supprime Fait et supérieur à 3 semaines
taches = taches %>% 
  filter( !( (ETAT == "f") & (ECHEANCE <= date_reu-3*7) ) )

@

% Sections Taches --------------------------------------------------------------
<<taches>>=
print_taches(taches, legende, 
             header = header$taches, 
             col_format = col_format$taches,
             format_fun = format_fun,
             grid_col = grid_col)
@

% Section ARMOIRE A PLANS ------------------------------------------------------
\clearpage
\section*{\centering ARMOIRE À PLANS }
<<plansnote>>=
print_table(xl$PLANSNOTE[,"TEXTE"], 
            col_format="p{\\textwidth}",
            hline = FALSE,
            header = NULL)
@

\subsection*{LISTE DES PLANS À JOUR}
<<plans>>=
plans = xl$PLANS %>% 
  mutate(SECTION = tolower(SECTION)) %>% 
  mutate(SOUSSECTION = tolower(SOUSSECTION))

print_plans(plans, legende,
            col_format = col_format$plans,
            header = header$plans, 
            format_fun = format_fun,
            hline = hline,
            grid_col = grid_col)
@

% Section PHOTOGRAPHIES --------------------------------------------------------
\clearpage
\section*{\centering PHOTOGRAPHIES}
<<photo>>=
print_photos(xl$PHOTOS, 
             header = NULL,
             hline = hline,
             grid_col = grid_col)
@

% Fin document LaTeX ===========================================================
\end{document}

% Fichier Excel prochaine réunion ---------------------------------------
<<next_reu>>=
# prepare cejour prochaine reunion
nafun = function(x) { y = NA; class(y) = class(x); return(y) }
cejour_next = cejour %>% 
  summarise_each(funs(nafun)) %>% # 1 ligne vide
  mutate(DATE = date_reu_next) %>% # date prochaine reu
  slice(rep(1, 10)) # dupliquer 10 lignes

# exporte xlsx prochaine reunion
xl_next = xl
xl_next$TACHES = taches
xl_next$CEJOUR = cejour_next
xl_next$PHOTOS = NULL

write_xl(xl_next, xlfile_next, open=FALSE)
@
