
<<setup, include=FALSE>>=
knitr::opts_chunk$set(results='asis', echo=FALSE)

require(bastiR)

source("cr_variables.r")
@

\documentclass[\Sexpr{fontsize}, \Sexpr{classoption}]{\Sexpr{documentclass}}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[french]{babel}
\usepackage[\Sexpr{geometry}]{geometry}
\usepackage{lmodern}
\usepackage{hyperref}
\usepackage{graphicx}
\usepackage[letterspace=\Sexpr{letterspace}]{microtype} % pour espacement de caractères avec \lsstyle
\usepackage{ulem} % pour barrer \sout
\usepackage{setspace} % pour définir les interlignes
\renewcommand*{\familydefault}{\\Sexpr{familydefault}} % police par défaut
% \graphicspath{{\Sexpr{graphicspath}}}

\usepackage{tabularx}
\usepackage[table,usenames,dvipsnames]{xcolor}
\usepackage{array}
\usepackage{longtable}
\setlongtables % pour pouvoir utiliser les colonnes l r c en longtable
\setlength{\LTleft}{-20cm plus -1fill} % pour l'alignement horizontal des lontables
\setlength{\LTright}{\LTleft}

\usepackage{fancyhdr} % entete et pied de page
\pagestyle{fancy}

\DeclareUnicodeCharacter{00A0}{~} % pour espaces insécables en utf8

\parindent \Sexpr{parindent}

<<colors>>=
for (i in seq_along(RGBcolors)) {
  cat("\\definecolor{", names(RGBcolors)[i], "}{RGB}{", paste(RGBcolors[[i]], collapse=","), "}\n", sep="")
}
@

\fancyhf{}
\fancyhead[C]{\Sexpr{entete$C}}
\fancyhead[L]{\Sexpr{entete$L}}
\fancyhead[R]{\Sexpr{entete$R}}
\fancyfoot[C]{\Sexpr{pied$C}}
\fancyfoot[L]{\Sexpr{pied$L}}
\fancyfoot[R]{\Sexpr{pied$R}}
\renewcommand{\headrulewidth}{0pt} % pour ne pas afficher de ligne horizontale en entête

\begin{document}

<<garde>>=
print_garde(garde)
@

<<read, include=FALSE>>=
# lecture fichier
xl = read_xl(xlfile, c(legende_sheet, taches_sheet, cejour_sheet, plans_sheet, plansnote_sheet), 
             sheets_opt = photos_sheet, 
             col_dates = col_dates, 
             origin = origin)
@

<<resize_photos, include=FALSE>>=
if (!dir.exists(backup))
  dir.create(backup)

resize_photos(photo_files = photo_files,
              folder = backup, max_width = max_width, max_height = max_height)

photo_files = list.files(backup, pattern = ".*\\.(jpg|jpeg|JPG|JPEG|png|PNG)")
@

<<prepare_photo, include=FALSE>>=
if (!(photos_sheet %in% names(xl))) {
  # prepare tableau photo
  xl[[photos_sheet]] = prepare_photos(photo_files)
  write_xl(xl, xlfile_out, open = openxl)
}
@

<<legende, include=FALSE>>=
require(dplyr)

legende = xl[[legende_sheet]] %>% 
  mutate_each_(funs(tolower), c(cle_var, classe_var))
@

\begin{spacing}{.7}
{\fontsize{6pt}{1em}\selectfont
\setlength{\tabcolsep}{1pt}
\renewcommand{\arraystretch}{1}
<<tab_orga>>=
orga = legende %>% 
  filter(CLASSE == "acteur orga", CLE != "all") %>% 
  select(-CLE, -CLASSE, -Lots) %>% 
  select(Désignation, Nom, Représentant, Téléphone, Mobile, Fax, Courriel, P, Dif, Inv, C)

print_table(orga, 
            col_format="|p{3.88cm}|p{2.4cm}|p{1.7cm}|p{1.5cm}|p{1.5cm}|p{1.5cm}|p{3.5cm}|>{\\centering}p{.3cm}|>{\\centering}p{.4cm}|>{\\color{red}\\centering}p{.5cm}|>{\\centering}p{.9cm}|", 
            rowcol_head = rowcol_head, hline=TRUE,
            header = c("Désignation", "Nom", "Représentant", "Tel", "Portables", "Fax", "Mail", "P", "Dif", "Inv", ""),
            vspace_after = "-.68cm",
            grid_col = grid_col)
@

<<tab_exe>>=
exe = legende %>% 
  filter(CLASSE == "acteur exe") %>% 
  select(-CLE, -CLASSE) %>% 
  select(Lots, Désignation, Nom, Représentant, Téléphone, Mobile, Fax, Courriel, P, Dif, Inv, C)

print_table(exe, 
            col_format="|p{.7cm}|p{3.1cm}|p{2.4cm}|p{1.7cm}|p{1.5cm}|p{1.5cm}|p{1.5cm}|p{3.5cm}|>{\\centering}p{.3cm}|>{\\centering}p{.4cm}|>{\\color{red}\\centering}p{.5cm}|>{\\centering}p{.9cm}|", 
            rowcol_head = rowcol_head, hline=TRUE,
            header = c("Lots", "Corps d'état", "Entreprises", "Représentant", "Tel", "Portables", "", "Mail", "P", "Dif", "Conv", "Pen Abs."),
            grid_col = grid_col)
@
}
\end{spacing}

<<edit_taches, include=FALSE>>=
cejour = xl[[cejour_sheet]] %>% 
  filter(!is.na(SECTION)) %>%  # effacer lignes vides
  mutate(ETAT = ifelse(is.na(ETAT), "a", ETAT)) # ETAT vide -> A faire

# ajouter cejour à taches
taches = xl[[taches_sheet]] %>% 
  bind_rows(cejour)

# recodage et tri
taches = taches %>% 
  mutate(ETAT = tolower(ETAT)) %>% 
  mutate(SECTION = tolower(SECTION)) %>% 
  mutate(ACTEUR = tolower(ACTEUR)) %>% 
  arrange(ETAT, SECTION, ECHEANCE, ACTEUR)

# ajouter rappel
row = (taches$ETAT == "a") & (taches$ECHEANCE <= date_reu)
taches$PRIORITE[row] = "RAPPEL"

# ajouter urgent
row = (taches$ETAT == "a") & (taches$ECHEANCE <= date_reu-7)
taches$PRIORITE[row] = "URGENT"

# supprime Fait et supérieur à 3 semaines
taches = taches %>% 
  filter( !( (ETAT == "f") & (ECHEANCE <= date_reu-3*7) ) )

# prepare cejour prochaine reunion
nafun = function(x) { y = NA; class(y) = class(x); return(y) }
cejour_next = cejour %>% 
  summarise_each(funs(nafun)) %>% # 1 ligne vide
  mutate(DATE = date_reu_next) %>% # date prochaine reu
  slice(rep(1, 10)) # dupliquer 10 lignes

# exporte xls prochaine reunion
xl_next = xl
xl_next[[taches_sheet]] = taches
xl_next[[cejour_sheet]] = cejour_next
xl_next[[photos_sheet]] = NULL

write_xl(xl_next, xlfile_next, open=FALSE)
@

<<taches>>=
print_taches(taches, legende, header = header_taches, 
             col_format = c("|p{.75\\textwidth}|>{\\centering}p{.1\\textwidth}|>{\\centering}p{.1\\textwidth}|"),
             cle_var = cle_var, classe_var = classe_var, 
             format_fun = format_fun,
             grid_col = grid_col)
@

\clearpage
\section*{\centering ARMOIRE \`A PLANS }
<<plansnote>>=
print_table(xl[[plansnote_sheet]][,"TEXTE"], 
            col_format="p{\\textwidth}",
            hline = FALSE,
            header = NULL)
@

\subsection*{LISTE DES PLANS \`A JOUR}
<<plans>>=
plans = xl[[plans_sheet]] %>% 
  mutate(SECTION = tolower(SECTION)) %>% 
  mutate(SOUSSECTION = tolower(SOUSSECTION))

print_plans(plans, legende,
            hline=TRUE,
            col_format = c("|p{.6\\textwidth}|>{\\centering}p{.1\\textwidth}|>{\\centering}p{.1\\textwidth}|>{\\centering}p{.1\\textwidth}|"),
            header = header_plans, 
            format_fun = format_fun,
            grid_col = grid_col)
@

\clearpage
\section*{\centering PHOTOGRAPHIES}
<<photo>>=
print_photos(xl[[photos_sheet]], 
             header = NULL,
             grid_col = grid_col)
@

\end{document}
